% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/swapcheck.R
\name{swapcheck}
\alias{swapcheck}
\title{Function to explore whether swapping the location of any two patterns may improve POSAC performance}
\usage{
swapcheck(X, Y, patmat, freqs)
}
\arguments{
\item{X}{The initial X values assigned to each pattern.}

\item{Y}{The initial Y values assigned to each pattern.}

\item{patmat}{A matrix of patterns of values across. Each row of the matrix should represents a distinct pattern with no duplicates. The columns are the variables defining the patterns.}

\item{freqs}{A vector of frequencies of each pattern. This should have the same length as nrow(patmat).}
}
\value{
The function returns a list with the following elements:
\describe{
  \item{CurrentCorrect}{The percentage of pairs correctly mapped by the POSAC function to begin with.}
  \item{BestSwap}{Details of the best possible swap including an updated per cent correct. This need not be above the current value.}
}
}
\description{
This function takes an existing set of X and Y estimates, a matrix of patterns, and the frequencies of the patterns and examines whether
swapping the (X,Y) coordinates of any two patterns may improve the criterion value that POSAC attempts to optimise.
As such this function can be used as one check of whether the results from the POSAC function itself are optimal.
}
\examples{
posac2=POSAC(CRASdata[,1:5],CRASdata[,6])
swapcheck(posac2$X,posac2$Y,posac2$patmat,posac2$freqs)
#no improvement - however it is possible to swap some incomparable patterns without damaging criteria


#showing how successive looking for swaps could be used as a (very poor) alternative algorithm
randX=rank(rnorm(nrow(CRASdata)))
randY=rank(rnorm(nrow(CRASdata)))
swap1=swapcheck(randX,randY,CRASdata[,1:5],CRASdata[,6])
swap1
#make the suggested swaps
randX=replace(randX,sort(as.numeric(swap1$BestSwap[1,1:2])),randX[as.numeric(swap1$BestSwap[1,1:2])])
randY=replace(randY,sort(as.numeric(swap1$BestSwap[1,1:2])),randY[as.numeric(swap1$BestSwap[1,1:2])])
#check for any more
swap2=swapcheck(randX,randY,CRASdata[,1:5],CRASdata[,6])
swap2
#and so on...
}
\keyword{Scalogram}
